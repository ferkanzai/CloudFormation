Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access into the server
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  RegionAMIMap:
    eu-west-2:
      AMI: ami-00a1270ce1e007c27
    eu-west-1:
      AMI: ami-0ce71448843cb18a1

Resources:
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
              php: []
          files:
            /var/www/html/index.php:
              content: !Sub |
                <?php print "Hello world Fernando was here!"; ?>
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
    Properties:
      ImageId: 
        Fn::FindInMap:
        - RegionAMIMap
        - !Ref AWS::Region
        - AMI
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref SecurityGroup
      Tags:
        - Key: "Name"
          Value: "Instance test"
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64':
          !Sub |
            #!/bin/bash -xe
            # Ensure AWS CFN Bootstrap is the latest
            yum install -y aws-cfn-bootstrap
            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable SSH
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

Outputs:
  EC2Instane:
    Description: Instance ID
    Value: !Ref EC2Instance
  ServerDNSName:
    Description: Public IP of the Instance
    Value: !GetAtt 
      - EC2Instance
      - PublicDnsName
  SecurityGroup:
    Description: Security Group ID
    Value: !GetAtt SecurityGroup.GroupId
  VPC:
    Description: VPC ID
    Value: !GetAtt SecurityGroup.VpcId
  Website:
    Description: The Public DNS for the EC2 Instance
    Value: !Sub http://${EC2Instance.PublicDnsName}