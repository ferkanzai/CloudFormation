Resources:
  IamUser:
    Type: AWS::IAM::User
    Properties:
      UserName: whicustomer
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/ReadOnlyAccess"
      LoginProfile:
        Password: "P@55w0rd"
        PasswordResetRequired: false
  IamKeys:
    DependsOn: IamUser
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: whicustomer
  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: false
      SupportedLoginProviders: 
        accounts.google.com:
          "841637137655-amagm4f33rq2t1dvs586v1d0r29moijo.apps.googleusercontent.com"
  IdentityPoolAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref CognitoIdentityPool
      Roles:
        "authenticated": 
          !GetAtt IamRole.Arn
  IamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              "ForAnyValue:StringLike": 
                "cognito-identity.amazonaws.com:amr":
                  "authenticated"
            Principal:
              Federated:
                - "cognito-identity.amazonaws.com"
      Path: "/"
      "Policies":
        -
          PolicyName: main
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:CreateUploadBucket"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DescribeStackEvents"
                  - "cloudformation:GetTemplateSummary"
                  - "cloudformation:ListStacks"
                  - "cloudformation:ListStackResources"
                  - "s3:CreateBucket"
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "mobileanalytics:PutEvent"
                  - "cognito-sync:*"
                  - "cognito-identity:*"
                Resource: "*" 
Outputs:
  RoleArn:
    Description: IAM role ARN
    Value: !GetAtt IamRole.Arn
  IdentityPoolId:
    Description: Identity Pool ID
    Value: !Ref CognitoIdentityPool
  CustomerAccessKey:
    Description: Customer Access Key
    Value: !Ref IamKeys
  CustomerSecretKey:
    Description: Customer Secret Access Key
    Value: !GetAtt IamKeys.SecretAccessKey